@inherits BaseCard
@inject ICommentParserService _commentParser;

<div class="card alt">
    <span class="keyword">@String.Join(" ", Method.Modifiers) </span>
    <span class="@GetTypeClass(Method.ReturnType.ToString())">@Method.ReturnType </span>
    <span class="emphasize">@Method.Identifier.ValueText</span>
    <span>(</span>
    <span>
        @((MarkupString)String.Join(", ", Method.ParameterList
                                                    ?.Parameters
                                                    .Select(param => $"<span class=\"{GetTypeClass(param.Type.ToString())}\">{param.Type.ToString()} </span>{param.Identifier.ValueText}")))
    </span>
    <span>)</span>

    @if (Method.HasStructuredTrivia && Comment != default)
    {
        <CommentCard Comment="Comment" />
    }
</div>

@code{
    [Parameter]
    public MethodDeclarationSyntax Method { get; set; }

    private DocumentationComment Comment { get; set; }

    protected override void OnInitialized()
    {
        Comment = _commentParser.GetSingleLineComment(Method);
    }
}